import type { IndyPoolConfig, AutoAcceptCredential, AutoAcceptProof } from '@aries-framework/core';
import type { WalletConfig } from '@aries-framework/core/build/types';
import { LogLevel } from '@aries-framework/core';
export declare type Transports = 'ws' | 'http';
export declare type InboundTransport = {
    transport: Transports;
    port: number;
};
export interface AriesRestConfig {
    label: string;
    walletConfig: WalletConfig;
    indyLedgers?: IndyPoolConfig[];
    publicDidSeed?: string;
    endpoints?: string[];
    autoAcceptConnections?: boolean;
    autoAcceptCredentials?: AutoAcceptCredential;
    autoAcceptProofs?: AutoAcceptProof;
    useLegacyDidSovPrefix?: boolean;
    logLevel?: LogLevel;
    inboundTransports?: InboundTransport[];
    outboundTransports?: Transports[];
    autoAcceptMediationRequests?: boolean;
    connectionImageUrl?: string;
    webhookUrl?: string;
    adminPort: number;
}
export declare function readRestConfig(path: string): Promise<any>;
export declare function runRestAgent(restConfig: AriesRestConfig): Promise<void>;
