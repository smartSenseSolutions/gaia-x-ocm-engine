"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupServer = void 0;
require("reflect-metadata");
const core_1 = require("@aries-framework/core");
const class_validator_jsonschema_1 = require("class-validator-jsonschema");
const routing_controllers_1 = require("routing-controllers");
const routing_controllers_openapi_1 = require("routing-controllers-openapi");
const swaggerUiExpress = __importStar(require("swagger-ui-express"));
const typedi_1 = require("typedi");
const BasicMessageEvents_1 = require("./events/BasicMessageEvents");
const ConnectionEvents_1 = require("./events/ConnectionEvents");
const CredentialEvents_1 = require("./events/CredentialEvents");
const ProofEvents_1 = require("./events/ProofEvents");
// eslint-disable-next-line @typescript-eslint/no-var-requires
const packageJson = require('../package.json');
const setupServer = async (agent, config) => {
    var _a;
    (0, routing_controllers_1.useContainer)(typedi_1.Container);
    typedi_1.Container.set(core_1.Agent, agent);
    // eslint-disable-next-line @typescript-eslint/ban-types
    const controllers = [__dirname + '/controllers/**/*.ts', __dirname + '/controllers/**/*.js'];
    let server;
    if (config.app) {
        server = (0, routing_controllers_1.useExpressServer)(config.app, {
            controllers: controllers,
        });
    }
    else {
        server = (0, routing_controllers_1.createExpressServer)({
            controllers: controllers,
            cors: (_a = config.cors) !== null && _a !== void 0 ? _a : true,
        });
    }
    if (config.webhookUrl) {
        (0, BasicMessageEvents_1.basicMessageEvents)(agent, config);
        (0, ConnectionEvents_1.connectionEvents)(agent, config);
        (0, CredentialEvents_1.credentialEvents)(agent, config);
        (0, ProofEvents_1.proofEvents)(agent, config);
    }
    const schemas = (0, class_validator_jsonschema_1.validationMetadatasToSchemas)({
        refPointerPrefix: '#/components/schemas/',
    });
    const storage = (0, routing_controllers_1.getMetadataArgsStorage)();
    const spec = (0, routing_controllers_openapi_1.routingControllersToSpec)(storage, undefined, {
        components: {
            schemas,
        },
        info: {
            description: packageJson.description,
            title: agent.config.label,
            version: packageJson.version,
        },
    });
    server.use('/docs', swaggerUiExpress.serve, swaggerUiExpress.setup(spec));
    server.get('/', (_req, res) => {
        res.header('Access-Control-Allow-Origin', '*');
        res.json(spec);
    });
    return server;
};
exports.setupServer = setupServer;
//# sourceMappingURL=server.js.map