"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AgentController = void 0;
const core_1 = require("@aries-framework/core");
const routing_controllers_1 = require("routing-controllers");
const typedi_1 = require("typedi");
let AgentController = class AgentController {
    constructor(agent) {
        this.agent = agent;
    }
    /**
     * Retrieve basic agent information
     */
    async getAgentInfo() {
        return {
            label: this.agent.config.label,
            endpoints: this.agent.config.endpoints,
            isInitialized: this.agent.isInitialized,
            publicDid: this.agent.publicDid,
        };
    }
};
__decorate([
    (0, typedi_1.Inject)(),
    __metadata("design:type", core_1.Agent)
], AgentController.prototype, "agent", void 0);
__decorate([
    (0, routing_controllers_1.Get)('/'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], AgentController.prototype, "getAgentInfo", null);
AgentController = __decorate([
    (0, routing_controllers_1.JsonController)('/agent'),
    (0, typedi_1.Service)(),
    __metadata("design:paramtypes", [core_1.Agent])
], AgentController);
exports.AgentController = AgentController;
//# sourceMappingURL=AgentController.js.map