import { Agent } from '@aries-framework/core';
import { InvitationConfigRequest } from '../../schemas/InvitationConfigRequest';
import { ReceiveInvitationByUrlRequest } from '../../schemas/ReceiveInvitationByUrlRequest';
import { ReceiveInvitationRequest } from '../../schemas/ReceiveInvitationRequest';
export declare class ConnectionController {
    private agent;
    constructor(agent: Agent);
    /**
     * Retrieve connection record by connectionId
     */
    getConnectionById(connectionId: string): Promise<Record<string, unknown>>;
    /**
     * Retrieve all connections records
     */
    getAllConnections(): Promise<Record<string, unknown>[]>;
    /**
     * Creates a new ConnectionRecord and InvitationMessage.
     * Returns ConnectionRecord with invitation and invitation_url
     */
    createInvitation(invitationConfig?: InvitationConfigRequest): Promise<{
        invitationUrl: string;
        invitation: Record<string, unknown>;
        connection: Record<string, unknown>;
    }>;
    /**
     * Receive connection invitation as invitee and create connection. If auto accepting is enabled
     * via either the config passed in the function or the global agent config, a connection
     * request message will be send.
     */
    receiveInvitation(invitationRequest: ReceiveInvitationRequest): Promise<Record<string, unknown>>;
    /**
     * Receive connection invitation as invitee by invitationUrl and create connection. If auto accepting is enabled
     * via either the config passed in the function or the global agent config, a connection
     * request message will be send.
     */
    receiveInvitationByUrl(invitationByUrlRequest: ReceiveInvitationByUrlRequest): Promise<Record<string, unknown>>;
    /**
     * Accept a connection invitation as invitee (by sending a connection request message) for the connection with the specified connection id.
     * This is not needed when auto accepting of connections is enabled.
     */
    acceptInvitation(connectionId: string): Promise<Record<string, unknown>>;
    /**
     * Accept a connection request as inviter (by sending a connection response message) for the connection with the specified connection id.
     * This is not needed when auto accepting of connection is enabled.
     */
    acceptRequest(connectionId: string): Promise<Record<string, unknown>>;
    /**
     * Accept a connection response as invitee (by sending a trust ping message) for the connection with the specified connection id.
     * This is not needed when auto accepting of connection is enabled.
     */
    acceptResponse(connectionId: string): Promise<Record<string, unknown>>;
    /**
     * Deletes a connectionRecord in the connectionRepository.
     */
    deleteConnection(connectionId: string): Promise<void>;
}
