"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProofRequest = void 0;
const core_1 = require("@aries-framework/core");
const transformers_1 = require("@aries-framework/core/build/utils/transformers");
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
class ProofRequest {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProofRequest.prototype, "name", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProofRequest.prototype, "version", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], ProofRequest.prototype, "nonce", void 0);
__decorate([
    (0, class_transformer_1.Expose)({ name: 'requested_attributes' }),
    (0, transformers_1.IsMap)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    (0, class_transformer_1.Type)(() => core_1.ProofAttributeInfo),
    (0, class_validator_1.IsInstance)(core_1.ProofAttributeInfo, { each: true }),
    __metadata("design:type", Map)
], ProofRequest.prototype, "requestedAttributes", void 0);
__decorate([
    (0, class_transformer_1.Expose)({ name: 'requested_predicates' }),
    (0, transformers_1.IsMap)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    (0, class_transformer_1.Type)(() => core_1.ProofPredicateInfo),
    (0, class_validator_1.IsInstance)(core_1.ProofPredicateInfo, { each: true }),
    __metadata("design:type", Map)
], ProofRequest.prototype, "requestedPredicates", void 0);
__decorate([
    (0, class_transformer_1.Expose)({ name: 'non_revoked' }),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => core_1.RevocationInterval),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInstance)(core_1.RevocationInterval),
    __metadata("design:type", core_1.RevocationInterval)
], ProofRequest.prototype, "nonRevoked", void 0);
__decorate([
    (0, class_validator_1.IsIn)(['1.0', '2.0']),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], ProofRequest.prototype, "ver", void 0);
exports.ProofRequest = ProofRequest;
//# sourceMappingURL=ProofRequest.js.map