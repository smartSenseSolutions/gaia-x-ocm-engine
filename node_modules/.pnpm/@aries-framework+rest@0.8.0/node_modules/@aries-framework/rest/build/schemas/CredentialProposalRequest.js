"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CredentialProposalRequest = void 0;
const core_1 = require("@aries-framework/core");
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
class CredentialProposalRequest {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CredentialProposalRequest.prototype, "connectionId", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CredentialProposalRequest.prototype, "comment", void 0);
__decorate([
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => core_1.CredentialPreview),
    (0, class_validator_1.IsDefined)(),
    __metadata("design:type", core_1.CredentialPreview)
], CredentialProposalRequest.prototype, "credentialProposal", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.Matches)(/^(did:sov:)?[a-zA-Z0-9]{21,22}$/),
    __metadata("design:type", String)
], CredentialProposalRequest.prototype, "schemaIssuerDid", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.Matches)(/^[a-zA-Z0-9]{21,22}:2:.+:[0-9.]+$/),
    __metadata("design:type", String)
], CredentialProposalRequest.prototype, "schemaId", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CredentialProposalRequest.prototype, "schemaName", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.Matches)(/^(\d+\.)?(\d+\.)?(\*|\d+)$/, {
        message: 'Version must be X.X or X.X.X',
    }),
    __metadata("design:type", String)
], CredentialProposalRequest.prototype, "schemaVersion", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.Matches)(/^([a-zA-Z0-9]{21,22}):3:CL:(([1-9][0-9]*)|([a-zA-Z0-9]{21,22}:2:.+:[0-9.]+)):(.+)?$/),
    __metadata("design:type", String)
], CredentialProposalRequest.prototype, "credentialDefinitionId", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.Matches)(/^(did:sov:)?[a-zA-Z0-9]{21,22}$/),
    __metadata("design:type", String)
], CredentialProposalRequest.prototype, "issuerDid", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Array)
], CredentialProposalRequest.prototype, "attachments", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Array)
], CredentialProposalRequest.prototype, "linkedAttachments", void 0);
__decorate([
    (0, class_validator_1.IsEnum)(core_1.AutoAcceptCredential),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], CredentialProposalRequest.prototype, "autoAcceptCredential", void 0);
exports.CredentialProposalRequest = CredentialProposalRequest;
//# sourceMappingURL=CredentialProposalRequest.js.map