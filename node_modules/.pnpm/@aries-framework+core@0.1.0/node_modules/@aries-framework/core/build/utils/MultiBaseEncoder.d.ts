import multibase from 'multibase';
export declare type BaseName = multibase.BaseName;
export declare class MultiBaseEncoder {
    /**
     *
     * Encodes a buffer into a multibase
     *
     * @param {Uint8Array} buffer the buffer that has to be encoded
     * @param {multibase.BaseName} baseName the encoding algorithm
     */
    static encode(buffer: Uint8Array, baseName?: multibase.BaseName): Uint8Array;
    /**
     *
     * Decodes a multibase into a Uint8Array
     *
     * @param {string} data the multibase that has to be decoded
     *
     * @returns {Uint8array} data the decoded multibase
     * @returns {string} encodingAlgorithm name of the encoding algorithm
     */
    static decode(data: string | Uint8Array): {
        data: Uint8Array;
        baseName: string;
    };
    /**
     *
     * Validates if it is a valid multibase encoded value
     *
     * @param {Uint8Array} data the multibase that needs to be validated
     *
     * @returns {boolean} bool whether the multibase value is encoded
     */
    static isValid(data: string | Uint8Array): boolean;
}
