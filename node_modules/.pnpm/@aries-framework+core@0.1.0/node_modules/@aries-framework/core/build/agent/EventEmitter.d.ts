import type { BaseEvent } from './Events';
import { AgentConfig } from './AgentConfig';
export declare class EventEmitter {
    private agentConfig;
    private eventEmitter;
    constructor(agentConfig: AgentConfig);
    emit<T extends BaseEvent>(data: T): void;
    on<T extends BaseEvent>(event: T['type'], listener: (data: T) => void | Promise<void>): void;
    off<T extends BaseEvent>(event: T['type'], listener: (data: T) => void | Promise<void>): void;
    observable<T extends BaseEvent>(event: T['type']): import("rxjs").Observable<T>;
}
