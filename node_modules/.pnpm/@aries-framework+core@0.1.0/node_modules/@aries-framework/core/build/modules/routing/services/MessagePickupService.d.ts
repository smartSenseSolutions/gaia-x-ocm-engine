import type { InboundMessageContext } from '../../../agent/models/InboundMessageContext';
import type { EncryptedMessage } from '../../../types';
import type { BatchPickupMessage } from '../messages';
import { MessageRepository } from '../../../storage/MessageRepository';
import { BatchMessage } from '../messages';
export declare class MessagePickupService {
    private messageRepository;
    constructor(messageRepository: MessageRepository);
    batch(messageContext: InboundMessageContext<BatchPickupMessage>): Promise<import("../../../types").OutboundMessage<BatchMessage>>;
    queueMessage(connectionId: string, message: EncryptedMessage): void;
}
