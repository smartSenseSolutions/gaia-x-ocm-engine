import type { ProofRecord } from './repository';
import { AgentConfig } from '../../agent/AgentConfig';
/**
 * This class handles all the automation with all the messages in the present proof protocol
 * Every function returns `true` if it should automate the flow and `false` if not
 */
export declare class ProofResponseCoordinator {
    private agentConfig;
    constructor(agentConfig: AgentConfig);
    /**
     * Returns the proof auto accept config based on priority:
     *	- The record config takes first priority
     *	- Otherwise the agent config
     *	- Otherwise {@link AutoAcceptProof.Never} is returned
     */
    private static composeAutoAccept;
    /**
     * Checks whether it should automatically respond to a proposal
     */
    shouldAutoRespondToProposal(proofRecord: ProofRecord): boolean;
    /**
     * Checks whether it should automatically respond to a request
     */
    shouldAutoRespondToRequest(proofRecord: ProofRecord): boolean;
    /**
     * Checks whether it should automatically respond to a presentation of proof
     */
    shouldAutoRespondToPresentation(proofRecord: ProofRecord): boolean;
}
