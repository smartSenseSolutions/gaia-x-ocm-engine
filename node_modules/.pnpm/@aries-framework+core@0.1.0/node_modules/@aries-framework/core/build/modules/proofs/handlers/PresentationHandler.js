"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PresentationHandler = void 0;
const helpers_1 = require("../../../agent/helpers");
const messages_1 = require("../messages");
class PresentationHandler {
    constructor(proofService, agentConfig, proofResponseCoordinator) {
        this.supportedMessages = [messages_1.PresentationMessage];
        this.proofService = proofService;
        this.agentConfig = agentConfig;
        this.proofResponseCoordinator = proofResponseCoordinator;
    }
    async handle(messageContext) {
        const proofRecord = await this.proofService.processPresentation(messageContext);
        if (this.proofResponseCoordinator.shouldAutoRespondToPresentation(proofRecord)) {
            return await this.createAck(proofRecord, messageContext);
        }
    }
    async createAck(record, messageContext) {
        var _a, _b, _c, _d;
        this.agentConfig.logger.info(`Automatically sending acknowledgement with autoAccept on ${this.agentConfig.autoAcceptProofs}`);
        const { message, proofRecord } = await this.proofService.createAck(record);
        if (messageContext.connection) {
            return helpers_1.createOutboundMessage(messageContext.connection, message);
        }
        else if (((_a = proofRecord.requestMessage) === null || _a === void 0 ? void 0 : _a.service) && ((_b = proofRecord.presentationMessage) === null || _b === void 0 ? void 0 : _b.service)) {
            const recipientService = (_c = proofRecord.presentationMessage) === null || _c === void 0 ? void 0 : _c.service;
            const ourService = (_d = proofRecord.requestMessage) === null || _d === void 0 ? void 0 : _d.service;
            return helpers_1.createOutboundServiceMessage({
                payload: message,
                service: recipientService.toDidCommService(),
                senderKey: ourService.recipientKeys[0],
            });
        }
        this.agentConfig.logger.error(`Could not automatically create presentation ack`);
    }
}
exports.PresentationHandler = PresentationHandler;
//# sourceMappingURL=PresentationHandler.js.map