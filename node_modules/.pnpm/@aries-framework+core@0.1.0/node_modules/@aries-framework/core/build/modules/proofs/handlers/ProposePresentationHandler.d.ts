import type { AgentConfig } from '../../../agent/AgentConfig';
import type { Handler, HandlerInboundMessage } from '../../../agent/Handler';
import type { ProofResponseCoordinator } from '../ProofResponseCoordinator';
import type { ProofService } from '../services';
import { ProposePresentationMessage } from '../messages';
export declare class ProposePresentationHandler implements Handler {
    private proofService;
    private agentConfig;
    private proofResponseCoordinator;
    supportedMessages: (typeof ProposePresentationMessage)[];
    constructor(proofService: ProofService, agentConfig: AgentConfig, proofResponseCoordinator: ProofResponseCoordinator);
    handle(messageContext: HandlerInboundMessage<ProposePresentationHandler>): Promise<import("../../../types").OutboundMessage<import("../messages").RequestPresentationMessage> | undefined>;
    private createRequest;
}
