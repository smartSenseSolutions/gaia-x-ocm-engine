"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MediationRequestHandler = void 0;
const helpers_1 = require("../../../agent/helpers");
const error_1 = require("../../../error");
const MediationRequestMessage_1 = require("../messages/MediationRequestMessage");
class MediationRequestHandler {
    constructor(mediatorService, agentConfig) {
        this.supportedMessages = [MediationRequestMessage_1.MediationRequestMessage];
        this.mediatorService = mediatorService;
        this.agentConfig = agentConfig;
    }
    async handle(messageContext) {
        if (!messageContext.connection) {
            throw new error_1.AriesFrameworkError(`Connection for verkey ${messageContext.recipientVerkey} not found!`);
        }
        const mediationRecord = await this.mediatorService.processMediationRequest(messageContext);
        if (this.agentConfig.autoAcceptMediationRequests) {
            const { message } = await this.mediatorService.createGrantMediationMessage(mediationRecord);
            return helpers_1.createOutboundMessage(messageContext.connection, message);
        }
    }
}
exports.MediationRequestHandler = MediationRequestHandler;
//# sourceMappingURL=MediationRequestHandler.js.map