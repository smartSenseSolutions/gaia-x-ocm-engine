import { Verkey } from 'indy-sdk';
import { AgentMessage } from '../../../agent/AgentMessage';
export declare enum KeylistUpdateAction {
    add = "add",
    remove = "remove"
}
export declare class KeylistUpdate {
    constructor(options: {
        recipientKey: Verkey;
        action: KeylistUpdateAction;
    });
    recipientKey: Verkey;
    action: KeylistUpdateAction;
}
export interface KeylistUpdateMessageOptions {
    id?: string;
    updates: KeylistUpdate[];
}
/**
 * Used to notify the mediator of keys in use by the recipient.
 *
 * @see https://github.com/hyperledger/aries-rfcs/blob/master/features/0211-route-coordination/README.md#keylist-update
 */
export declare class KeylistUpdateMessage extends AgentMessage {
    constructor(options: KeylistUpdateMessageOptions);
    readonly type = "https://didcomm.org/coordinate-mediation/1.0/keylist-update";
    static readonly type = "https://didcomm.org/coordinate-mediation/1.0/keylist-update";
    updates: KeylistUpdate[];
}
