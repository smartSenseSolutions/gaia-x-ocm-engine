import { AgentMessage } from '../../../agent/AgentMessage';
import { Attachment } from '../../../decorators/attachment/Attachment';
import { ProofRequest } from '../models';
export interface RequestPresentationOptions {
    id?: string;
    comment?: string;
    requestPresentationAttachments: Attachment[];
}
export declare const INDY_PROOF_REQUEST_ATTACHMENT_ID = "libindy-request-presentation-0";
/**
 * Request Presentation Message part of Present Proof Protocol used to initiate request from verifier to prover.
 *
 * @see https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#request-presentation
 */
export declare class RequestPresentationMessage extends AgentMessage {
    constructor(options: RequestPresentationOptions);
    readonly type = "https://didcomm.org/present-proof/1.0/request-presentation";
    static readonly type = "https://didcomm.org/present-proof/1.0/request-presentation";
    /**
     *  Provides some human readable information about this request for a presentation.
     */
    comment?: string;
    /**
     * An array of attachments defining the acceptable formats for the presentation.
     */
    requestPresentationAttachments: Attachment[];
    get indyProofRequest(): ProofRequest | null;
}
