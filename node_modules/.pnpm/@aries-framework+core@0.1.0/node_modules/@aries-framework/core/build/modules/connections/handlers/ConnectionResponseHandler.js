"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectionResponseHandler = void 0;
const helpers_1 = require("../../../agent/helpers");
const messages_1 = require("../messages");
class ConnectionResponseHandler {
    constructor(connectionService, agentConfig) {
        this.supportedMessages = [messages_1.ConnectionResponseMessage];
        this.connectionService = connectionService;
        this.agentConfig = agentConfig;
    }
    async handle(messageContext) {
        var _a;
        const connection = await this.connectionService.processResponse(messageContext);
        // TODO: should we only send ping message in case of autoAcceptConnection or always?
        // In AATH we have a separate step to send the ping. So for now we'll only do it
        // if auto accept is enable
        if ((_a = connection.autoAcceptConnection) !== null && _a !== void 0 ? _a : this.agentConfig.autoAcceptConnections) {
            const { message } = await this.connectionService.createTrustPing(connection.id, { responseRequested: false });
            return helpers_1.createOutboundMessage(connection, message);
        }
    }
}
exports.ConnectionResponseHandler = ConnectionResponseHandler;
//# sourceMappingURL=ConnectionResponseHandler.js.map