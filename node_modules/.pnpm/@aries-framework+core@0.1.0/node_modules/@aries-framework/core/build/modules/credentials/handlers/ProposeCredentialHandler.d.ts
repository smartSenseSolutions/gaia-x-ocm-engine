import type { AgentConfig } from '../../../agent/AgentConfig';
import type { Handler, HandlerInboundMessage } from '../../../agent/Handler';
import type { CredentialResponseCoordinator } from '../CredentialResponseCoordinator';
import type { CredentialService } from '../services';
import { ProposeCredentialMessage } from '../messages';
export declare class ProposeCredentialHandler implements Handler {
    private credentialService;
    private agentConfig;
    private credentialAutoResponseCoordinator;
    supportedMessages: (typeof ProposeCredentialMessage)[];
    constructor(credentialService: CredentialService, agentConfig: AgentConfig, responseCoordinator: CredentialResponseCoordinator);
    handle(messageContext: HandlerInboundMessage<ProposeCredentialHandler>): Promise<import("../../../types").OutboundMessage<import("../messages").OfferCredentialMessage> | undefined>;
    private createOffer;
}
