import type { AgentConfig } from '../../../agent/AgentConfig';
import type { Handler, HandlerInboundMessage } from '../../../agent/Handler';
import type { CredentialResponseCoordinator } from '../CredentialResponseCoordinator';
import type { CredentialService } from '../services';
import { IssueCredentialMessage } from '../messages';
export declare class IssueCredentialHandler implements Handler {
    private credentialService;
    private agentConfig;
    private credentialResponseCoordinator;
    supportedMessages: (typeof IssueCredentialMessage)[];
    constructor(credentialService: CredentialService, agentConfig: AgentConfig, credentialResponseCoordinator: CredentialResponseCoordinator);
    handle(messageContext: HandlerInboundMessage<IssueCredentialHandler>): Promise<import("../../../types").OutboundMessage<import("../messages").CredentialAckMessage> | import("../../../types").OutboundServiceMessage<import("../messages").CredentialAckMessage> | undefined>;
    private createAck;
}
