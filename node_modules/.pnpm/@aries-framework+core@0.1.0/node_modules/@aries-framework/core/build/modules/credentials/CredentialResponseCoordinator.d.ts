import type { CredentialRecord } from './repository';
import { AgentConfig } from '../../agent/AgentConfig';
/**
 * This class handles all the automation with all the messages in the issue credential protocol
 * Every function returns `true` if it should automate the flow and `false` if not
 */
export declare class CredentialResponseCoordinator {
    private agentConfig;
    constructor(agentConfig: AgentConfig);
    /**
     * Returns the credential auto accept config based on priority:
     *	- The record config takes first priority
     *	- Otherwise the agent config
     *	- Otherwise {@link AutoAcceptCredential.Never} is returned
     */
    private static composeAutoAccept;
    /**
     * Checks whether it should automatically respond to a proposal
     */
    shouldAutoRespondToProposal(credentialRecord: CredentialRecord): boolean;
    /**
     * Checks whether it should automatically respond to an offer
     */
    shouldAutoRespondToOffer(credentialRecord: CredentialRecord): boolean;
    /**
     * Checks whether it should automatically respond to a request
     */
    shouldAutoRespondToRequest(credentialRecord: CredentialRecord): boolean;
    /**
     * Checks whether it should automatically respond to the issuance of a credential
     */
    shouldAutoRespondToIssue(credentialRecord: CredentialRecord): boolean;
    private areProposalValuesValid;
    private areOfferValuesValid;
    private areCredentialValuesValid;
    private areProposalAndOfferDefinitionIdEqual;
    private isRequestDefinitionIdValid;
}
