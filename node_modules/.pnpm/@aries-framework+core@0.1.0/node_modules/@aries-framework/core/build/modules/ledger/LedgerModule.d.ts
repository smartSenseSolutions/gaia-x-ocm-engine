import type { SchemaTemplate, CredentialDefinitionTemplate } from './services';
import type { NymRole } from 'indy-sdk';
import { Wallet } from '../../wallet/Wallet';
import { IndyLedgerService } from './services';
export declare class LedgerModule {
    private ledgerService;
    private wallet;
    constructor(wallet: Wallet, ledgerService: IndyLedgerService);
    registerPublicDid(did: string, verkey: string, alias: string, role?: NymRole): Promise<string>;
    getPublicDid(did: string): Promise<import("indy-sdk").GetNymResponse>;
    registerSchema(schema: SchemaTemplate): Promise<import("indy-sdk").Schema>;
    getSchema(id: string): Promise<import("indy-sdk").Schema>;
    registerCredentialDefinition(credentialDefinitionTemplate: Omit<CredentialDefinitionTemplate, 'signatureType'>): Promise<import("indy-sdk").CredDef>;
    getCredentialDefinition(id: string): Promise<import("indy-sdk").CredDef>;
}
