import type { AgentConfig } from '../../../agent/AgentConfig';
import type { Handler, HandlerInboundMessage } from '../../../agent/Handler';
import type { MediationRecipientService } from '../../routing/services/MediationRecipientService';
import type { ConnectionService } from '../services/ConnectionService';
import { ConnectionRequestMessage } from '../messages';
export declare class ConnectionRequestHandler implements Handler {
    private connectionService;
    private agentConfig;
    private mediationRecipientService;
    supportedMessages: (typeof ConnectionRequestMessage)[];
    constructor(connectionService: ConnectionService, agentConfig: AgentConfig, mediationRecipientService: MediationRecipientService);
    handle(messageContext: HandlerInboundMessage<ConnectionRequestHandler>): Promise<import("../../../types").OutboundMessage<import("../messages").ConnectionResponseMessage> | undefined>;
}
